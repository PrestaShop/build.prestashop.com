<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>override on PrestaShop Developers&#39; blog</title>
    <link>https://build.prestashop-project.org/tag/override/</link>
    <description>Recent content in override on PrestaShop Developers&#39; blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 May 2015 12:15:00 +0200</lastBuildDate><atom:link href="https://build.prestashop-project.org/tag/override/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to override modules in PrestaShop</title>
      <link>https://build.prestashop-project.org/howtos/module/how-to-override-modules/</link>
      <pubDate>Sun, 10 May 2015 12:15:00 +0200</pubDate>
      
      <guid>https://build.prestashop-project.org/howtos/module/how-to-override-modules/</guid>
      <description>Since version 1.6.0.11 of PrestaShop, there is a new feature that allows developers to override a module&amp;rsquo;s instance classes (ie. its main module files, see the PR by @axometeam).
Since PrestaShop uses lots of modules for both core and custom features, module overrides are a welcome addition to an already great override system in PrestaShop. Let&amp;rsquo;s take a look on how to use it.
Note Remember that overrides in PrestaShop are exclusive.</description>
    </item>
    
  </channel>
</rss>
